{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCIA,I,EAAM,EAAmB,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EADN,SAAS,gBAAgB,CAAC,qB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EACJ,GAAG,CAAC,SAAC,CAA9C,EACE,OAAO,OAAO,EAAK,WAAW,CAAC,OAAO,CAAC,KAAM,IAC/C,GACM,EAAc,EAAiB,MAAM,CAAC,SAAC,CAAA,CAAK,CAAlD,EAA4D,OAAA,EAAM,CAAO,EAAA,GAEnE,EAAgB,KAAK,KAAK,CAAC,EAAc,EAAiB,MAAM,EAEhE,EAAiB,EAAY,cAAc,CAAC,SAC5C,EAAmB,EAAc,cAAc,CAAC,SAEhD,EAAU,SAAS,aAAa,CAAC,0BAGvC,CAFc,SAAS,aAAa,CAAC,yBAE/B,WAAW,CAAG,EACpB,EAAQ,WAAW,CAAG","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write your code here\nvar nodeValues = document.querySelectorAll(\"span.population\");\nvar populationValues = _to_consumable_array(nodeValues).map(function(span) {\n    return Number(span.textContent.replace(/,/g, \"\"));\n});\nvar totalNumber = populationValues.reduce(function(acc, value) {\n    return acc + value;\n}, 0);\nvar averageNumber = Math.floor(totalNumber / populationValues.length);\nvar formattedTotal = totalNumber.toLocaleString(\"en-US\");\nvar formattedAverage = averageNumber.toLocaleString(\"en-US\");\nvar average = document.querySelector(\"span.average-population\");\nvar total = document.querySelector(\"span.total-population\");\ntotal.textContent = formattedTotal;\naverage.textContent = formattedAverage;\n\n//# sourceMappingURL=index.e7fe767b.js.map\n","'use strict';\n\n// write your code here\nconst nodeValues = document.querySelectorAll('span.population');\nconst populationValues = [...nodeValues].map((span) => {\n  return Number(span.textContent.replace(/,/g, ''));\n});\nconst totalNumber = populationValues.reduce((acc, value) => acc + value, 0);\n\nconst averageNumber = Math.floor(totalNumber / populationValues.length);\n\nconst formattedTotal = totalNumber.toLocaleString('en-US');\nconst formattedAverage = averageNumber.toLocaleString('en-US');\n\nconst average = document.querySelector('span.average-population');\nconst total = document.querySelector('span.total-population');\n\ntotal.textContent = formattedTotal;\naverage.textContent = formattedAverage;\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","populationValues","_to_consumable_array","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","map","span","Number","textContent","replace","totalNumber","reduce","acc","value","averageNumber","Math","floor","formattedTotal","toLocaleString","formattedAverage","average","querySelector","total"],"version":3,"file":"index.e7fe767b.js.map"}